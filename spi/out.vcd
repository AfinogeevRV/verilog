$date
	Tue Sep 12 13:02:45 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tspi $end
$var wire 1 ! mas_sdout $end
$var wire 1 " mas_sdin $end
$var wire 1 # mas_sck $end
$var wire 1 $ led3 $end
$var wire 1 % led2 $end
$var wire 1 & led1 $end
$var reg 1 ' button $end
$var reg 1 ( clk $end
$var reg 1 ) rst $end
$scope module m $end
$var wire 1 ' button $end
$var wire 1 ( clk $end
$var wire 1 & led1 $end
$var wire 1 % led2 $end
$var wire 1 $ led3 $end
$var wire 1 * mas_ms $end
$var wire 1 ) reset $end
$var wire 1 + sl_ss $end
$var wire 1 " sl_sdout $end
$var wire 1 ! sl_sdin $end
$var wire 1 # sl_sck $end
$var wire 8 , sl_rdata [7:0] $end
$var wire 1 ! mas_sdout $end
$var wire 1 " mas_sdin $end
$var wire 1 # mas_sck $end
$var wire 8 - mas_rdata [7:0] $end
$var reg 8 . data [7:0] $end
$var reg 1 / led2_r $end
$var reg 1 0 led3_r $end
$var reg 8 1 mas_tdata [7:0] $end
$var reg 8 2 sl_tdata [7:0] $end
$scope module mas $end
$var wire 1 ( clk $end
$var wire 1 * ms $end
$var wire 1 ) rst $end
$var wire 1 # sck $end
$var wire 8 3 tdata [7:0] $end
$var wire 1 ! sdout $end
$var wire 1 " sdin $end
$var reg 2 4 counter [1:0] $end
$var reg 5 5 nbc [4:0] $end
$var reg 4 6 nbi [3:0] $end
$var reg 4 7 nbo [3:0] $end
$var reg 8 8 rdata [7:0] $end
$var reg 8 9 rdata_r [7:0] $end
$var reg 8 : rreg [7:0] $end
$var reg 1 ; sck_r $end
$var reg 8 < treg [7:0] $end
$upscope $end
$scope module sl $end
$var wire 1 ) rst $end
$var wire 1 # sck $end
$var wire 1 ! sdin $end
$var wire 1 + ss $end
$var wire 8 = tdata [7:0] $end
$var wire 1 " sdout $end
$var reg 4 > nbi [3:0] $end
$var reg 4 ? nbo [3:0] $end
$var reg 8 @ rdata [7:0] $end
$var reg 8 A rdata_r [7:0] $end
$var reg 8 B rreg [7:0] $end
$var reg 8 C treg [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 C
b0 B
b0 A
bx @
b0 ?
b0 >
b100011 =
b0 <
x;
b0 :
b0 9
bx 8
b0 7
b0 6
b0 5
bx 4
b100011 3
b100011 2
b100011 1
x0
x/
bx .
bx -
bx ,
1+
1*
0)
0(
1'
1&
x%
x$
x#
0"
0!
$end
#1
b100011 <
b100011 C
0#
0;
b0 4
1(
#2
0(
#3
1(
#4
0(
#5
b100011 .
1)
1(
#6
0(
#7
1(
#8
0(
#9
1(
#10
0)
0(
#11
1(
#12
0(
#13
1(
#14
0(
#15
1(
#16
0(
#17
1(
#18
0(
#19
1(
#20
0&
0*
0+
0'
0(
#21
b1 4
1(
#22
0(
#23
b11 4
1(
#24
0(
#25
b1 >
b1 6
b1 5
1#
1;
b0 4
1(
#26
0(
#27
b1 4
1(
#28
0(
#29
b11 4
1(
#30
0(
#31
b1000110 <
b1 7
b1000110 C
b1 ?
b10 5
0#
0;
b0 4
1(
#32
0(
#33
b1 4
1(
#34
0(
#35
b11 4
1(
#36
0(
#37
b10 6
b10 >
b11 5
1#
1;
b0 4
1(
#38
0(
#39
b1 4
1(
#40
0(
#41
b11 4
1(
#42
0(
#43
1"
1!
b10001100 C
b10 ?
b10001100 <
b10 7
b100 5
0#
0;
b0 4
1(
#44
0(
#45
b1 4
1(
#46
0(
#47
b11 4
1(
#48
0(
#49
b1 B
b11 >
b1 :
b11 6
b101 5
1#
1;
b0 4
1(
#50
0(
#51
b1 4
1(
#52
0(
#53
b11 4
1(
#54
0(
#55
0!
0"
b11000 <
b11 7
b11000 C
b11 ?
b110 5
0#
0;
b0 4
1(
#56
0(
#57
b1 4
1(
#58
0(
#59
b11 4
1(
#60
0(
#61
b10 :
b100 6
b10 B
b100 >
b111 5
1#
1;
b0 4
1(
#62
0(
#63
b1 4
1(
#64
0(
#65
b11 4
1(
#66
0(
#67
b110000 C
b100 ?
b110000 <
b100 7
b1000 5
0#
0;
b0 4
1(
#68
0(
#69
b1 4
1(
#70
0(
#71
b11 4
1(
#72
0(
#73
b100 B
b101 >
b100 :
b101 6
b1001 5
1#
1;
b0 4
1(
#74
0(
#75
b1 4
1(
#76
0(
#77
b11 4
1(
#78
0(
#79
b1100000 <
b101 7
b1100000 C
b101 ?
b1010 5
0#
0;
b0 4
1(
#80
0(
#81
b1 4
1(
#82
0(
#83
b11 4
1(
#84
0(
#85
b1000 :
b110 6
b1000 B
b110 >
b1011 5
1#
1;
b0 4
1(
#86
0(
#87
b1 4
1(
#88
0(
#89
b11 4
1(
#90
0(
#91
1"
1!
b11000000 C
b110 ?
b11000000 <
b110 7
b1100 5
0#
0;
b0 4
1(
#92
0(
#93
b1 4
1(
#94
0(
#95
b11 4
1(
#96
0(
#97
b10001 B
b111 >
b10001 :
b111 6
b1101 5
1#
1;
b0 4
1(
#98
0(
#99
b1 4
1(
#100
0(
#101
b11 4
1(
#102
0(
#103
b10000000 <
b111 7
b10000000 C
b111 ?
b1110 5
0#
0;
b0 4
1(
#104
0(
#105
b1 4
1(
#106
0(
#107
b11 4
1(
#108
0(
#109
b100011 -
b100011 8
b100011 :
b0 6
b100011 ,
b100011 @
b100011 B
b0 >
b1111 5
1#
1;
b0 4
1(
#110
0(
#111
b1 4
1(
#112
0(
#113
b11 4
1(
#114
0(
#115
0"
0!
b100011 C
b0 ?
b100011 <
b0 7
b10000 5
0#
0;
b0 4
1(
#116
0(
#117
1(
#118
0(
#119
1(
#120
1&
1*
1+
1'
0(
#121
b0 5
1(
#122
0(
#123
1(
#124
0(
#125
1(
#126
0(
#127
1(
#128
0(
#129
1(
#130
0(
